{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Fluent",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#types"
        },
        {
            "include": "#parameters"
        },
        {
            "include": "#variables"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.fluent",
                    "match": "#.*$"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.fluent",
                    "match": "\\b(define|if|else|elif|for|each|in|return|inputs)\\b"
                },
                {
                    "name": "keyword.operator.fluent",
                    "match": "\\b(initialize|add|reduce|increase|by|to)\\b"
                },
                {
                    "name": "keyword.other.fluent",
                    "match": "\\b(print)\\b"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.fluent",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.fluent",
                    "match": "\\\\."
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.fluent",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.fluent",
                    "match": "(?<=define )\\w+"
                },
                {
                    "name": "entity.name.function.fluent",
                    "match": "^\\s*\\w+(?=\\s+(\\w|\\[|\"|'))"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.fluent",
                    "match": "\\b(number|string|list|boolean|optional)\\b"
                }
            ]
        },
        "parameters": {
            "patterns": [
                {
                    "match": "\\s*-\\s+(\\w+)\\s+\\((\\w+(?:\\s+optional\\s+.*?)?)\\)",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.fluent"
                        },
                        "2": {
                            "name": "storage.type.fluent"
                        }
                    }
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.fluent",
                    "match": "\\b(?!define|if|else|elif|for|each|in|return|inputs|initialize|add|reduce|increase|by|to|print|number|string|list|boolean|optional)\\w+\\b"
                }
            ]
        }
    },
    "scopeName": "source.fluent"
}
